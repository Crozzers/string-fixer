name: Release VSCode extension

on:
  workflow_dispatch:
    inputs:
      version:
        description: The version to publish
        required: true
      vscode:
        description: Release to VSCode marketplace
        type: boolean
        default: false
      ghRelease:
        description: Create a github release
        type: boolean
        default: false
      bumpVersion:
        description: Bump the version file and create tag
        type: boolean
        default: false

env:
  TAG_PREFIX: vscode/

jobs:
  bump_version:
    if: ${{ github.event.inputs.bumpVersion }}
    runs-on: ubuntu-latest
    environment: release-env
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Set version number
        working-directory: extensions/vscode/
        run: |
          npm version "${{ github.event.inputs.version }}"

      - name: Edit changelog
        working-directory: extensions/vscode/
        run: ../.github/scripts/edit-changelog.sh "$VERSION" "$TAG_PREFIX"
        env:
          VERSION: ${{ github.event.inputs.version }}

      - name: Commit and tag
        run: |
          git config --global user.name "Github Actions [Bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/$GITHUB_REPOSITORY

          git add extensions/vscode/
          git commit -m "Bump $TAG_PREFIX$VERSION"
          git tag "$TAG_PREFIX$VERSION"

          git push
          git push --tags
        env:
          VERSION: ${{ github.event.inputs.version }}

  release_vsix:
    if: ${{ github.event.inputs.vscode }}
    runs-on: ubuntu-latest
    environment: release-env
    needs: bump_version
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up NodeJS 20
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        working-directory: extensions/vscode/
        run: |
          npm ci --include=dev
          npm i -g @vscode/vsce

      - name: Build
        working-directory: extensions/vscode/
        run: |
          # copy in license from main repo
          cp ../../LICENSE ./
          # remove "Unreleased" header from deployed package
          perl -i -p0e 's/## \[Unreleased\]\n\n\n//se' CHANGELOG.md
          npx vsce package

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: vsix
          path: |
            extensions/vscode/string-fixer*.vsix

      - name: Publish to VSCode
        if: ${{ inputs.vscode == true || github.event_name == 'push' }}
        working-directory: extensions/vscode/
        run: |
          vsce publish -p ${{ secrets.VSCODE_API_TOKEN }}

  release_github:
    if: ${{ github.event.inputs.ghRelease }}
    runs-on: ubuntu-latest
    environment: release-env
    needs: release_vsix
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.TAG_PREFIX }}/${{ github.event.inputs.version }}

      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: vsix
          path: dist

      - name: Extract release notes
        uses: ffurrer2/extract-release-notes@v2
        with:
          changelog_file: extensions/vscode/CHANGELOG.md

      - name: Publish GitHub release
        uses: softprops/action-gh-release@v2
        with:
          body: ${{ steps.extract-release-notes.outputs.release_notes }}
          draft: false
          files: dist/*.vsix
          name: vscode v${{ github.event.inputs.version }}
          tag_name: ${{ env.TAG_PREFIX }}${{ github.event.inputs.version }}
